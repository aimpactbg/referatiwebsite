// pages/api/contact.ts - Contact Form API Route
import type { NextApiRequest, NextApiResponse } from 'next';
import nodemailer from 'nodemailer';

interface ContactFormData {
  name: string;
  email: string;
  phone?: string;
  service: string;
  message: string;
}

interface ApiResponse {
  success: boolean;
  message: string;
  error?: string;
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<ApiResponse>
) {
  // Only allow POST requests
  if (req.method !== 'POST') {
    return res.status(405).json({
      success: false,
      message: 'Method not allowed'
    });
  }

  try {
    const { name, email, phone, service, message }: ContactFormData = req.body;

    // Basic validation
    if (!name || !email || !service || !message) {
      return res.status(400).json({
        success: false,
        message: '–ú–æ–ª—è –ø–æ–ø—ä–ª–Ω–µ—Ç–µ –≤—Å–∏—á–∫–∏ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–æ–ª–µ—Ç–∞'
      });
    }

    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return res.status(400).json({
        success: false,
        message: '–ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª –∞–¥—Ä–µ—Å'
      });
    }

    // Create nodemailer transporter for Referati.website domain email
    const transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST, // mail.referati.website
      port: parseInt(process.env.SMTP_PORT || '465'),
      secure: true, // true for port 465 (SSL/TLS)
      auth: {
        user: process.env.SMTP_USER, // orders@referati.website
        pass: process.env.SMTP_PASS, // email password
      },
      // Additional SSL options for custom domains
      tls: {
        rejectUnauthorized: false // Allow self-signed certificates if needed
      }
    });

    // HTML template for client confirmation email
    const clientEmailHTML = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞–ø–∏—Ç–≤–∞–Ω–µ—Ç–æ!</title>
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #2563eb, #1e40af); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
        .content { background: #f8fafc; padding: 30px; border-radius: 0 0 10px 10px; }
        .highlight { background: #eff6ff; padding: 15px; border-left: 4px solid #2563eb; margin: 20px 0; }
        .button { display: inline-block; background: #10b981; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold; }
        .footer { text-align: center; margin-top: 30px; color: #64748b; font-size: 14px; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>üéâ –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞–ø–∏—Ç–≤–∞–Ω–µ—Ç–æ!</h1>
          <p>–ü–æ–ª—É—á–∏—Ö–º–µ –≤–∞—à–∞—Ç–∞ –∑–∞—è–≤–∫–∞ –∏ —â–µ —Å–µ —Å–≤—ä—Ä–∂–µ–º —Å –≤–∞—Å —Å–∫–æ—Ä–æ</p>
        </div>

        <div class="content">
          <p>–ó–¥—Ä–∞–≤–µ–π—Ç–µ <strong>${name}</strong>,</p>

          <p>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ—Ç–æ! –ü–æ–ª—É—á–∏—Ö–º–µ –≤–∞—à–∞—Ç–∞ –∑–∞—è–≤–∫–∞ –∑–∞ <strong>${service}</strong> –∏ –≤–µ—á–µ —Ä–∞–±–æ—Ç–∏–º –ø–æ –Ω–µ—è.</p>

          <div class="highlight">
            <h3>üìã –î–µ—Ç–∞–π–ª–∏ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞:</h3>
            <p><strong>–£—Å–ª—É–≥–∞:</strong> ${service}</p>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${message}</p>
            ${phone ? `<p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p>` : ''}
          </div>

          <h3>‚è∞ –ö–∞–∫–≤–æ —Å–ª–µ–¥–≤–∞?</h3>
          <ul>
            <li><strong>–î–æ 30 –º–∏–Ω—É—Ç–∏:</strong> –©–µ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∞ –æ—Ñ–µ—Ä—Ç–∞</li>
            <li><strong>–î–æ 2 —á–∞—Å–∞:</strong> –©–µ —Å–µ —Å–≤—ä—Ä–∂–µ–º —Å –≤–∞—Å –∑–∞ —É—Ç–æ—á–Ω—è–≤–∞–Ω–µ –Ω–∞ –¥–µ—Ç–∞–π–ª–∏—Ç–µ</li>
            <li><strong>–°–ª–µ–¥ –ø–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ:</strong> –ó–∞–ø–æ—á–≤–∞–º–µ —Ä–∞–±–æ—Ç–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞</li>
          </ul>

          <p style="text-align: center; margin: 30px 0;">
            <a href="https://www.referati.website" class="button">–†–∞–∑–≥–ª–µ–¥–∞–π—Ç–µ –Ω–∞—à–∏—Ç–µ —É—Å–ª—É–≥–∏</a>
          </p>

          <div class="highlight">
            <h4>üìû –ó–∞ —Å–ø–µ—à–Ω–∏ —Å–ª—É—á–∞–∏:</h4>
            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> +359 000 000 000</p>
            <p><strong>Viber/WhatsApp:</strong> +359 000 000 000</p>
            <p><strong>–ò–º–µ–π–ª:</strong> orders@referati.website</p>
          </div>
        </div>

        <div class="footer">
          <p>Referati.website | –ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –∞–∫–∞–¥–µ–º–∏—á–Ω–∏ —É—Å–ª—É–≥–∏</p>
          <p>–¢–æ–∑–∏ –∏–º–µ–π–ª –±–µ—à–µ –∏–∑–ø—Ä–∞—Ç–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –ú–æ–ª—è –Ω–µ –æ—Ç–≥–æ–≤–∞—Ä—è–π—Ç–µ.</p>
        </div>
      </div>
    </body>
    </html>
    `;

    // HTML template for admin notification email
    const adminEmailHTML = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –æ—Ç —Å–∞–π—Ç–∞</title>
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #dc2626; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9fafb; padding: 20px; border: 1px solid #e5e7eb; border-radius: 0 0 8px 8px; }
        .field { margin-bottom: 15px; padding: 10px; background: white; border-radius: 4px; border-left: 4px solid #2563eb; }
        .urgent { background: #fef2f2; border-left-color: #dc2626; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>üö® –ù–û–í–ê –ó–ê–Ø–í–ö–ê –û–¢ –°–ê–ô–¢–ê</h1>
          <p>–ü–æ–ª—É—á–µ–Ω–∞ –Ω–∞ ${new Date().toLocaleString('bg-BG')}</p>
        </div>

        <div class="content">
          <div class="field urgent">
            <strong>–ö–õ–ò–ï–ù–¢:</strong> ${name}
          </div>

          <div class="field">
            <strong>–ò–ú–ï–ô–õ:</strong> ${email}
          </div>

          ${phone ? `<div class="field"><strong>–¢–ï–õ–ï–§–û–ù:</strong> ${phone}</div>` : ''}

          <div class="field">
            <strong>–£–°–õ–£–ì–ê:</strong> ${service}
          </div>

          <div class="field">
            <strong>–û–ü–ò–°–ê–ù–ò–ï:</strong><br>
            ${message}
          </div>

          <div class="field urgent">
            <strong>–î–ï–ô–°–¢–í–ò–ï:</strong> –°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –∫–ª–∏–µ–Ω—Ç–∞ –¥–æ 30 –º–∏–Ω—É—Ç–∏!
          </div>
        </div>
      </div>
    </body>
    </html>
    `;

    // Send confirmation email to client
    await transporter.sendMail({
      from: `"Referati.website" <orders@referati.website>`,
      to: email,
      subject: 'üéâ –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞–ø–∏—Ç–≤–∞–Ω–µ—Ç–æ! –©–µ —Å–µ —Å–≤—ä—Ä–∂–µ–º —Å–∫–æ—Ä–æ',
      html: clientEmailHTML,
      text: `–ó–¥—Ä–∞–≤–µ–π—Ç–µ ${name},\n\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞–ø–∏—Ç–≤–∞–Ω–µ—Ç–æ! –ü–æ–ª—É—á–∏—Ö–º–µ –≤–∞—à–∞—Ç–∞ –∑–∞—è–≤–∫–∞ –∑–∞ ${service} –∏ —â–µ —Å–µ —Å–≤—ä—Ä–∂–µ–º —Å –≤–∞—Å –¥–æ 30 –º–∏–Ω—É—Ç–∏.\n\n–†eferati.website`
    });

    // Send notification email to admin
    await transporter.sendMail({
      from: `"Referati.website Contact Form" <orders@referati.website>`,
      to: 'orders@referati.website',
      subject: `üö® –ù–û–í–ê –ó–ê–Ø–í–ö–ê: ${service} - ${name}`,
      html: adminEmailHTML,
      text: `–ù–û–í–ê –ó–ê–Ø–í–ö–ê –û–¢ –°–ê–ô–¢–ê\n\n–ö–ª–∏–µ–Ω—Ç: ${name}\n–ò–º–µ–π–ª: ${email}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone || '–ù–µ –µ –ø–æ—Å–æ—á–µ–Ω'}\n–£—Å–ª—É–≥–∞: ${service}\n–û–ø–∏—Å–∞–Ω–∏–µ: ${message}`
    });

    // Success response
    res.status(200).json({
      success: true,
      message: '–ó–∞—è–≤–∫–∞—Ç–∞ –±–µ—à–µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!'
    });

  } catch (error) {
    console.error('Contact form error:', error);

    res.status(500).json({
      success: false,
      message: '–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ—Ç–æ',
      error: process.env.NODE_ENV === 'development' ? error.message : undefined
    });
  }
}